@startuml

class Account{
- String name
- String username
- String password
- LocalDate birthday
- int age
- boolean isChild
- boolean isAdmin
- ArrayList<Media> seenMedia
- ArrayList<Media> savedMedia

+ Account(String username, String password, String name, LocalDate birthdate)
+ boolean makeThisAccountAdmin(String password)
+ void makeAnotherAccountAdmin(HashMap<String, Account> accounts, String username)
- void calculateAge(LocalDate date)
- void isChildBasedOnAge()
+ Account getUsername()
+ String getName()
+ int getAge()
+ String getPassword()
+ String toString()
+ void addSeenMedia(Media media)
+ void addSavedMedia(Media media)
+ void setAdmin(boolean admin)
+ boolean getIsAdmin()
+ boolean getIsChild()
}



class AccountManager {
+ static FileIO io
+ static ArrayList<Account>
- HashMap<String,Account> accounts
- final String path

+ AccountManager()
+ void createAccount(String username, String password, String name, (LocalDate birthdate))
+ String createAccountMessage(Account account)
+ void loadUserData()
- boolean promptAdmin()
+ boolean makeThisAccountAdmin(String password)
+ boolean isUserNameAndPasswordCorrect()
+ void writeSeenByUser(Media media, Account user)
+ ArrayList<Media> loadSeenMediacsv(Account user)
+ ArrayList<String> getNonAdmins()
+ void makeAnotherAccountAdmin(String username)
+ boolean isUserInSystem(String username)
+ void appendUserData(Account account)
+ Account getAccount(String username)
}



class Login {
public static TextUI ui
- AccountManager manager
- StreamingService streamingservice
- String appName

+ Login(String appName)
+ void start()
+ void login()
+ String createPassword()
+ void createAccount
+ void endProgram
}



class Main{
+ Login login
+ static void main(String[] args)
}



Abstract Media{
# String title
# ArrayList<String> genre
# double rating

+ Media(String title, ArrayList<String> genre, double rating)
+ abstract String toStringcsv()
+ abstract String getTitle()
+ abstract ArrayList<String> getGenre()
+ abstract double getRating()
+ abstract void playMedia()
+ abstract void playMedia(Account user, int seasonNumber, int episodeNumber)
}



class MediaManager {
+ FileIO io
- TextUI ui
- ArrayList<Media> mediaList
- ArrayList<Movies> movies
- ArrayList<Series> series
- String moviePath
- String SeriesPath

+ MediaManager(String moviePath, String seriesPath)
+ void loadMovieData()
+ void loadSeriesData()
+ void saveMediaData(String title, int releaseYear, String endYear, ArrayList<String> genre, double rating, ArrayList<StringZ episodesAndSeasons)
+ void saveMediaData(String tilte, int year, ArrayList<String> genre, double rating)
+ ArrayList<Media> searchMediaByTitle(String title)
+ ArrayList<Media> searchMediaByRating(String title)
+ ArrayList<Media> searchMediaByGenre(String title)
+ ArrayList<Media> searchMediaByYear(String title)
+ ArrayList<String> getGenreList()
+ ArrayList<Media> getMediaList()
+ ArrayList<Series> getSeries()
+ ArrayList<Movie> getMovie()
+ void addMedia(Media media)
}



class Movie{
- int year

+ Movie(String title, int year, ArrayList<String> genre, double rating)
+ String toString()
+ String toStringcsv()
+ String getTitle()
+ int getYear()
+ ArrayList<String> genre getGenre()
+ double getRating()
}



class Series{
- List <String> yearSpan
- List <int> episodes
- List <List> seasons
+ Series(String title, List<String> releaseYear,List<String> genre, double rating, List<String> seasons)
}



class StreamingService{
- TextUI ui
- MediaManager manager
+ StreamingService(Account account)
+ void showMenu()
+ void search()
- void searchTitle(String title)
- void searchCategory(String categoryName)
- void searchByYear(int startYear, int endYear)
- void searchByRating(double rating)
- void displayMedia()
+ void showSeenMedia(Account a)
+ void showSavedMedia(Account a)
+ void logOut()
+ void endStreamingService()
}



package "util" {
    class TextUI {
    - Scanner scan
    + void displayMessage(String message)
    + void displayMessage(Object object)
    + void displayList(ArrayList<String> list, String message)
    + String promptText(String message)
    + int promptInteger(String message)
    + int promptDouble(String message)
    + LocalDate promptBirthday()
    + boolean isValidDay(int year, int month, int day)
    + boolean isLeapYear(int year)
    + boolean promptBinary(String message)
    + ArrayList<String> promptChoice(ArrayList<String> options, int limit, String msg)
    }
}

package "util" {
    class FileIO{
    + void saveData(ArrayList<String> list, String path, String header)
    + void appendData(String object, String path)
    + ArrayList<String> readData(String path)
    + String[] readData(String path, int length)
    }
 }



Main *-- Login
Login *-- AccountManager
Login *-- StreamingService
StreamingService *-- Account

AccountManager *-- Account
AccountManager *-- FileIO
Login *-- TextUI
StreamingService *-- TextUI

StreamingService *-- MediaManager
MediaManager *-- FileIO
MediaManager *-- Media


Media <|-- Movie
Media <|-- Series

@enduml